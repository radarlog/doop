imports:
    - { resource: 'logs.yaml' }
    - { resource: 'migrations.yaml' }

parameters:
    container.dumper.inline_factories: true
    container.dumper.inline_class_loader: true

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    _instanceof:
        Radarlog\Doop\Application\Command\Handler:
            tags: ['command.handler']
        Radarlog\Doop\Infrastructure\Http\Controller:
            bind:
                Radarlog\Doop\Application\Command\Bus: '@Radarlog\Doop\Infrastructure\Http\ThrowableHandlerBus'
        Radarlog\Doop\Infrastructure\Cli\Executable:
            bind:
                Radarlog\Doop\Application\Command\Bus: '@Radarlog\Doop\Application\Command\LoggerBus'

    Radarlog\Doop\:
        resource: '../src'
        exclude:
            - '../src/Infrastructure/Kernel.php'
            - '../src/Infrastructure/Sql/Migrations'

    # Command Bus
    Radarlog\Doop\Application\Command\SimpleBus:
        arguments: [!tagged command.handler]
    Radarlog\Doop\Application\Command\LoggerBus:
        decorates: Radarlog\Doop\Application\Command\SimpleBus
        arguments: ['@monolog.logger.commands']
    Radarlog\Doop\Infrastructure\Http\ThrowableHandlerBus:
        decorates: Radarlog\Doop\Application\Command\LoggerBus

    # S3
    Radarlog\Doop\Infrastructure\S3\Connection:
        factory: Radarlog\Doop\Infrastructure\S3\Connection::from
        arguments:
            - '%env(string:S3_ENDPOINT)%'
            - '%env(string:S3_KEY)%'
            - '%env(string:S3_SECRET)%'
            - '%env(string:S3_REGION)%'
    Radarlog\Doop\Infrastructure\S3\Client:
        arguments: ['%env(string:S3_BUCKET)%']

    # SQL
    Radarlog\Doop\Infrastructure\Sql\Connection:
        factory: Radarlog\Doop\Infrastructure\Sql\ConnectionFactory::create
        arguments:
            -   master: '%env(string:SQL_MASTER)%'
                slaves: '%env(string:SQL_SLAVES)%'
