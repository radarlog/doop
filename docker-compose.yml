version: '3.4'

networks:
    doop:
        driver: bridge

services:
    nginx:
        depends_on:
            - php
        container_name: doop-nginx
        image: nginx:1.18-alpine
        restart: ${DOCKER_RESTART}
        networks:
            - doop
        volumes:
            - ./docker/nginx/server.nginx:/etc/nginx/conf.d/default.conf:ro
            - .:/app:ro
        ports:
            - 80:8080

    php:
        depends_on:
            - encore
            - minio
            - postgres
        container_name: doop-php
        build:
            context: docker/php
            target: development
        restart: ${DOCKER_RESTART}
        networks:
            - doop
        user: 1000:1000
        volumes:
            - .:/app:rw
        environment:
            XDEBUG_CONFIG: "remote_host=172.18.0.1 remote_port=9009"
            PHP_IDE_CONFIG: serverName=doop
            PHP_MEMORY_LIMIT: 512M

    encore:
        container_name: doop-encore
        image: node:14.5-alpine
        restart: ${DOCKER_RESTART}
        networks:
            - doop
        user: 1000:1000
        volumes:
            - .:/app:rw
        working_dir: /app
        environment:
            NPM_CONFIG_LOGLEVEL: info
            NODE_ENV: ${APP_ENV}
        command: yarn dev-server --host 0.0.0.0 --port 8765 --public localhost:80

    postgres:
        container_name: doop-postgres
        image: postgres:12.3-alpine
        restart: ${DOCKER_RESTART}
        networks:
            - doop
        volumes:
            - ./docker/postgres/create-test-db.sql:/docker-entrypoint-initdb.d/create-test-db.sql:ro
        ports:
            - 5432:5432
        environment:
            POSTGRES_DB: doop
            POSTGRES_USER: doop
            POSTGRES_PASSWORD: doop
            POSTGRES_INITDB_ARGS: "--no-sync"

    minio:
        container_name: doop-minio
        image: minio/minio:latest
        restart: ${DOCKER_RESTART}
        networks:
            - doop
        ports:
            - 9000:9000
        environment:
            MINIO_ACCESS_KEY: ${S3_KEY}
            MINIO_SECRET_KEY: ${S3_SECRET}
            MINIO_REGION: ${S3_REGION}
        entrypoint: sh
        command: -c 'mkdir -p /data/$S3_BUCKET && minio server /data'
