version: '3.8'

name: doop

networks:
    default:
        name: doop

services:
    nginx:
        depends_on:
            - php
        image: nginx:1.25-alpine-slim
        volumes:
            - ./docker/nginx/templates:/etc/nginx/templates:ro
        ports:
            - "80:8080"
        environment:
            DOCUMENT_ROOT: /app/public
            LISTEN_PORT: 8080
            UPSTREAM_FPM_SERVER: php:9000
            UPSTREAM_ENCORE_SERVER: encore:8765

    php:
        depends_on:
            - encore
            - minio
            - postgres
        build:
            context: docker/php
            target: development

        volumes:
            - .:/app:rw
        environment:
            XDEBUG_MODE: debug
            XDEBUG_CONFIG: >-
                client_host=host.docker.internal
                discover_client_host=true
            PHP_MEMORY_LIMIT: 256M

    encore:
        image: node:21.7-alpine
        user: $MYUID:$MYGID
        volumes:
            - .:/app:rw
        working_dir: /app
        environment:
            NPM_CONFIG_LOGLEVEL: info
            NODE_ENV: $APP_ENV
        command: yarn dev-server --host 0.0.0.0 --port 8765

    postgres:
        image: postgres:15.6-alpine
        volumes:
            - ./docker/postgres/create-test-db.sql:/docker-entrypoint-initdb.d/create-test-db.sql:ro
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: doop
            POSTGRES_USER: doop
            POSTGRES_PASSWORD: doop
            POSTGRES_INITDB_ARGS: "--no-sync"

    minio:
        image: minio/minio:RELEASE.2024-03-10T02-53-48Z
        ports:
            - "9000:9000"
        environment:
            MINIO_ROOT_USER: $S3_KEY
            MINIO_ROOT_PASSWORD: $S3_SECRET
            MINIO_REGION: $S3_REGION
        entrypoint: sh
        command: -c 'mkdir -p /data/$S3_BUCKET && minio server /data'
