name: CI

on:
    pull_request:
        paths-ignore:
            - '**.md'
    push:
        paths-ignore:
            - '**.md'

jobs:
    tests:
        name: PHP ${{ matrix.php }} tests on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        continue-on-error: ${{ matrix.experimental }}
        strategy:
            fail-fast: false
            matrix:
                os:
                    - ubuntu-20.04
                php:
                    - 8.1
                experimental: [ false ]

        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Build docker-compose stack
                env:
                    MYUID: 1001
                    MYGID: 121
                run: |
                    docker-compose build --build-arg MYUID=$MYUID --build-arg MYGID=$MYGID php
                    docker-compose up -d

            -   name: Check running containers
                run: docker-compose ps

            -   name: Install composer dependencies
                run: |
                    docker-compose exec -T php composer validate --ansi --no-interaction --strict
                    docker-compose exec -T php composer check-platform-reqs --ansi --no-dev --no-interaction
                    docker-compose exec -T php composer install --ansi --no-interaction
                    docker-compose exec -T php composer normalize --ansi --dry-run --no-interaction

            -   name: Check Coding standards
                run: docker-compose exec -T php vendor/bin/phpcs

            -   name: Run PHPStan
                run: docker-compose exec -T php vendor/bin/phpstan analyse --ansi

            -   name: Run Psalm
                run: docker-compose exec -T php vendor/bin/psalm --output-format=github

            -   name: Run Deptrac
                run: docker-compose exec -T php vendor/bin/deptrac --ansi --fail-on-uncovered --no-interaction
